// Code generated by hertz generator.

package car

import (
	"context"

	base "github.com/alimy/freecar/app/api/biz/model/base"
	car "github.com/alimy/freecar/app/api/biz/model/car"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// AdminCreateCar .
// @router /admin/car [POST]
func AdminCreateCar(ctx context.Context, c *app.RequestContext) {
	var err error
	var req car.AdminCreateCarRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// AdminDeleteCar .
// @router /admin/car [DELETE]
func AdminDeleteCar(ctx context.Context, c *app.RequestContext) {
	var err error
	var req car.AdminDeleteCarRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// AdminGetSomeCars .
// @router /admin/car/some [GET]
func AdminGetSomeCars(ctx context.Context, c *app.RequestContext) {
	var err error
	var req car.AdminGetSomeCarsRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// AdminGetAllCars .
// @router /admin/car/all [GET]
func AdminGetAllCars(ctx context.Context, c *app.RequestContext) {
	var err error
	var req car.AdminGetAllCarsRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// GetCars .
// @router /cars [GET]
func GetCars(ctx context.Context, c *app.RequestContext) {
	var err error
	var req car.GetCarsRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// GetCar .
// @router /car [GET]
func GetCar(ctx context.Context, c *app.RequestContext) {
	var err error
	var req car.GetCarRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}
